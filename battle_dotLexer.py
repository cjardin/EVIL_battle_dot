# Generated from battle_dot.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,15,304,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
        2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,
        6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,103,8,8,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,265,
        8,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,
        278,8,10,1,11,4,11,281,8,11,11,11,12,11,282,1,12,1,12,1,13,4,13,
        288,8,13,11,13,12,13,289,1,13,1,13,4,13,294,8,13,11,13,12,13,295,
        1,14,4,14,299,8,14,11,14,12,14,300,1,14,1,14,0,0,15,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        1,0,3,3,0,65,90,95,95,97,122,153,0,35,35,42,42,48,57,169,169,174,
        174,8252,8252,8265,8265,8482,8482,8505,8505,8596,8601,8617,8618,
        8986,8987,9000,9000,9167,9167,9193,9203,9208,9210,9410,9410,9642,
        9643,9654,9654,9664,9664,9723,9726,9728,9732,9742,9742,9745,9745,
        9748,9749,9752,9752,9757,9757,9760,9760,9762,9763,9766,9766,9770,
        9770,9774,9775,9784,9786,9792,9792,9794,9794,9800,9811,9823,9824,
        9827,9827,9829,9830,9832,9832,9851,9851,9854,9855,9874,9879,9881,
        9881,9883,9884,9888,9889,9895,9895,9898,9899,9904,9905,9917,9918,
        9924,9925,9928,9928,9934,9935,9937,9937,9939,9940,9961,9962,9968,
        9973,9975,9978,9981,9981,9986,9986,9989,9989,9992,9997,9999,9999,
        10002,10002,10004,10004,10006,10006,10013,10013,10017,10017,10024,
        10024,10035,10036,10052,10052,10055,10055,10060,10060,10062,10062,
        10067,10069,10071,10071,10083,10084,10133,10135,10145,10145,10160,
        10160,10175,10175,10548,10549,11013,11015,11035,11036,11088,11088,
        11093,11093,12336,12336,12349,12349,12951,12951,12953,12953,126980,
        126980,127183,127183,127344,127345,127358,127359,127374,127374,127377,
        127386,127462,127487,127489,127490,127514,127514,127535,127535,127538,
        127546,127568,127569,127744,127777,127780,127891,127894,127895,127897,
        127899,127902,127984,127987,127989,127991,128253,128255,128317,128329,
        128334,128336,128359,128367,128368,128371,128378,128391,128391,128394,
        128397,128400,128400,128405,128406,128420,128421,128424,128424,128433,
        128434,128444,128444,128450,128452,128465,128467,128476,128478,128481,
        128481,128483,128483,128488,128488,128495,128495,128499,128499,128506,
        128591,128640,128709,128715,128722,128725,128727,128733,128741,128745,
        128745,128747,128748,128752,128752,128755,128764,128992,129003,129008,
        129008,129292,129338,129340,129349,129351,129535,129648,129652,129656,
        129660,129664,129670,129680,129708,129712,129722,129728,129733,129744,
        129753,129760,129767,129776,129782,3,0,9,10,13,13,32,32,333,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,1,31,1,0,
        0,0,3,40,1,0,0,0,5,42,1,0,0,0,7,44,1,0,0,0,9,54,1,0,0,0,11,56,1,
        0,0,0,13,58,1,0,0,0,15,60,1,0,0,0,17,102,1,0,0,0,19,264,1,0,0,0,
        21,277,1,0,0,0,23,280,1,0,0,0,25,284,1,0,0,0,27,287,1,0,0,0,29,298,
        1,0,0,0,31,32,5,100,0,0,32,33,5,111,0,0,33,34,5,116,0,0,34,35,5,
        95,0,0,35,36,5,110,0,0,36,37,5,97,0,0,37,38,5,109,0,0,38,39,5,101,
        0,0,39,2,1,0,0,0,40,41,5,58,0,0,41,4,1,0,0,0,42,43,5,59,0,0,43,6,
        1,0,0,0,44,45,5,100,0,0,45,46,5,111,0,0,46,47,5,116,0,0,47,48,5,
        95,0,0,48,49,5,101,0,0,49,50,5,109,0,0,50,51,5,111,0,0,51,52,5,106,
        0,0,52,53,5,105,0,0,53,8,1,0,0,0,54,55,5,40,0,0,55,10,1,0,0,0,56,
        57,5,44,0,0,57,12,1,0,0,0,58,59,5,41,0,0,59,14,1,0,0,0,60,61,5,45,
        0,0,61,62,5,62,0,0,62,16,1,0,0,0,63,64,5,111,0,0,64,65,5,110,0,0,
        65,66,5,95,0,0,66,67,5,115,0,0,67,68,5,116,0,0,68,69,5,97,0,0,69,
        70,5,114,0,0,70,103,5,116,0,0,71,72,5,111,0,0,72,73,5,110,0,0,73,
        74,5,95,0,0,74,75,5,115,0,0,75,76,5,112,0,0,76,77,5,97,0,0,77,78,
        5,119,0,0,78,103,5,110,0,0,79,80,5,111,0,0,80,81,5,110,0,0,81,82,
        5,95,0,0,82,83,5,108,0,0,83,84,5,111,0,0,84,85,5,115,0,0,85,86,5,
        116,0,0,86,87,5,95,0,0,87,88,5,97,0,0,88,89,5,95,0,0,89,90,5,98,
        0,0,90,91,5,97,0,0,91,92,5,116,0,0,92,93,5,116,0,0,93,94,5,108,0,
        0,94,103,5,101,0,0,95,96,5,111,0,0,96,97,5,110,0,0,97,98,5,95,0,
        0,98,99,5,107,0,0,99,100,5,105,0,0,100,101,5,108,0,0,101,103,5,108,
        0,0,102,63,1,0,0,0,102,71,1,0,0,0,102,79,1,0,0,0,102,95,1,0,0,0,
        103,18,1,0,0,0,104,105,5,114,0,0,105,106,5,117,0,0,106,107,5,109,
        0,0,107,108,5,98,0,0,108,265,5,97,0,0,109,110,5,107,0,0,110,111,
        5,105,0,0,111,112,5,108,0,0,112,113,5,108,0,0,113,114,5,101,0,0,
        114,265,5,114,0,0,115,116,5,100,0,0,116,117,5,97,0,0,117,265,5,98,
        0,0,118,119,5,68,0,0,119,120,5,86,0,0,120,265,5,68,0,0,121,122,5,
        106,0,0,122,123,5,97,0,0,123,124,5,115,0,0,124,125,5,111,0,0,125,
        126,5,110,0,0,126,265,5,88,0,0,127,128,5,107,0,0,128,129,5,117,0,
        0,129,130,5,112,0,0,130,131,5,99,0,0,131,132,5,97,0,0,132,133,5,
        107,0,0,133,134,5,105,0,0,134,135,5,110,0,0,135,136,5,97,0,0,136,
        137,5,116,0,0,137,138,5,111,0,0,138,265,5,114,0,0,139,140,5,98,0,
        0,140,141,5,101,0,0,141,142,5,101,0,0,142,265,5,103,0,0,143,144,
        5,110,0,0,144,145,5,105,0,0,145,146,5,110,0,0,146,147,5,106,0,0,
        147,265,5,97,0,0,148,149,5,116,0,0,149,150,5,114,0,0,150,151,5,101,
        0,0,151,152,5,101,0,0,152,153,5,95,0,0,153,154,5,104,0,0,154,155,
        5,117,0,0,155,156,5,103,0,0,156,157,5,103,0,0,157,158,5,101,0,0,
        158,265,5,114,0,0,159,160,5,87,0,0,160,161,5,105,0,0,161,162,5,108,
        0,0,162,163,5,108,0,0,163,164,5,105,0,0,164,165,5,97,0,0,165,166,
        5,109,0,0,166,167,5,95,0,0,167,168,5,98,0,0,168,169,5,101,0,0,169,
        170,5,104,0,0,170,171,5,97,0,0,171,172,5,118,0,0,172,173,5,105,0,
        0,173,174,5,111,0,0,174,265,5,114,0,0,175,176,5,115,0,0,176,177,
        5,113,0,0,177,178,5,117,0,0,178,179,5,105,0,0,179,265,5,100,0,0,
        180,181,5,109,0,0,181,182,5,111,0,0,182,183,5,110,0,0,183,184,5,
        111,0,0,184,185,5,108,0,0,185,186,5,105,0,0,186,187,5,116,0,0,187,
        265,5,104,0,0,188,189,5,99,0,0,189,190,5,111,0,0,190,265,5,98,0,
        0,191,192,5,99,0,0,192,193,5,114,0,0,193,194,5,111,0,0,194,195,5,
        105,0,0,195,196,5,115,0,0,196,197,5,115,0,0,197,198,5,97,0,0,198,
        199,5,110,0,0,199,200,5,116,0,0,200,201,5,108,0,0,201,202,5,111,
        0,0,202,203,5,118,0,0,203,204,5,101,0,0,204,265,5,114,0,0,205,206,
        5,103,0,0,206,207,5,114,0,0,207,208,5,105,0,0,208,209,5,100,0,0,
        209,210,5,100,0,0,210,265,5,121,0,0,211,212,5,103,0,0,212,213,5,
        114,0,0,213,214,5,105,0,0,214,215,5,100,0,0,215,216,5,100,0,0,216,
        217,5,121,0,0,217,218,5,107,0,0,218,219,5,105,0,0,219,220,5,108,
        0,0,220,221,5,108,0,0,221,222,5,101,0,0,222,265,5,114,0,0,223,224,
        5,116,0,0,224,225,5,104,0,0,225,226,5,105,0,0,226,227,5,115,0,0,
        227,228,5,105,0,0,228,229,5,115,0,0,229,230,5,98,0,0,230,231,5,97,
        0,0,231,232,5,103,0,0,232,233,5,117,0,0,233,234,5,101,0,0,234,235,
        5,116,0,0,235,236,5,116,0,0,236,265,5,101,0,0,237,238,5,115,0,0,
        238,239,5,119,0,0,239,240,5,101,0,0,240,241,5,101,0,0,241,265,5,
        112,0,0,242,243,5,112,0,0,243,244,5,111,0,0,244,245,5,116,0,0,245,
        246,5,97,0,0,246,247,5,116,0,0,247,265,5,111,0,0,248,249,5,99,0,
        0,249,250,5,101,0,0,250,251,5,115,0,0,251,252,5,99,0,0,252,265,5,
        97,0,0,253,254,5,115,0,0,254,255,5,105,0,0,255,256,5,108,0,0,256,
        257,5,108,0,0,257,265,5,121,0,0,258,259,5,105,0,0,259,260,5,110,
        0,0,260,261,5,118,0,0,261,262,5,97,0,0,262,263,5,100,0,0,263,265,
        5,101,0,0,264,104,1,0,0,0,264,109,1,0,0,0,264,115,1,0,0,0,264,118,
        1,0,0,0,264,121,1,0,0,0,264,127,1,0,0,0,264,139,1,0,0,0,264,143,
        1,0,0,0,264,148,1,0,0,0,264,159,1,0,0,0,264,175,1,0,0,0,264,180,
        1,0,0,0,264,188,1,0,0,0,264,191,1,0,0,0,264,205,1,0,0,0,264,211,
        1,0,0,0,264,223,1,0,0,0,264,237,1,0,0,0,264,242,1,0,0,0,264,248,
        1,0,0,0,264,253,1,0,0,0,264,258,1,0,0,0,265,20,1,0,0,0,266,267,5,
        97,0,0,267,268,5,108,0,0,268,278,5,108,0,0,269,270,5,115,0,0,270,
        271,5,101,0,0,271,272,5,108,0,0,272,278,5,102,0,0,273,274,5,115,
        0,0,274,275,5,111,0,0,275,276,5,109,0,0,276,278,5,101,0,0,277,266,
        1,0,0,0,277,269,1,0,0,0,277,273,1,0,0,0,278,22,1,0,0,0,279,281,7,
        0,0,0,280,279,1,0,0,0,281,282,1,0,0,0,282,280,1,0,0,0,282,283,1,
        0,0,0,283,24,1,0,0,0,284,285,7,1,0,0,285,26,1,0,0,0,286,288,2,48,
        57,0,287,286,1,0,0,0,288,289,1,0,0,0,289,287,1,0,0,0,289,290,1,0,
        0,0,290,291,1,0,0,0,291,293,5,46,0,0,292,294,2,48,57,0,293,292,1,
        0,0,0,294,295,1,0,0,0,295,293,1,0,0,0,295,296,1,0,0,0,296,28,1,0,
        0,0,297,299,7,2,0,0,298,297,1,0,0,0,299,300,1,0,0,0,300,298,1,0,
        0,0,300,301,1,0,0,0,301,302,1,0,0,0,302,303,6,14,0,0,303,30,1,0,
        0,0,8,0,102,264,277,282,289,295,300,1,6,0,0
    ]

class battle_dotLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    ON_STMT_NAMES = 9
    BEHAVIOR_NAMES = 10
    TARGETS = 11
    NAME_ID = 12
    EMOJI = 13
    VALUE = 14
    WS = 15

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'dot_name'", "':'", "';'", "'dot_emoji'", "'('", "','", "')'", 
            "'->'" ]

    symbolicNames = [ "<INVALID>",
            "ON_STMT_NAMES", "BEHAVIOR_NAMES", "TARGETS", "NAME_ID", "EMOJI", 
            "VALUE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "ON_STMT_NAMES", "BEHAVIOR_NAMES", "TARGETS", 
                  "NAME_ID", "EMOJI", "VALUE", "WS" ]

    grammarFileName = "battle_dot.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


